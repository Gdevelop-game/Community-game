var gdjs;(function(a){const p=GlobalPIXIModule.PIXI;class x{constructor(i,t,e){this.started=!1;this.emitterLifetime=0;let l=null;const r=new p.Graphics;if(r.lineStyle(0,0,0),r.beginFill(a.rgbToHexNumber(255,255,255),1),e.rendererType==="Point")r.drawCircle(0,0,e.rendererParam1);else if(e.rendererType==="Line")r.drawRect(e.rendererParam1,0,e.rendererParam1,e.rendererParam2),r.beginFill(a.rgbToHexNumber(255,255,255),.001),r.drawRect(0,0,e.rendererParam1,e.rendererParam2);else if(e.textureParticleName){const n=new p.Sprite(i.getGame().getImageManager().getPIXITexture(e.textureParticleName));n.width=e.rendererParam1,n.height=e.rendererParam2,r.addChild(n)}else r.drawRect(0,0,e.rendererParam1,e.rendererParam2);r.endFill(),l=i.getGame().getRenderer().getPIXIRenderer().generateTexture(r);const s={color:{list:[{value:a.rgbToHexNumber(e.particleRed1,e.particleGreen1,e.particleBlue1).toString(16),time:0},{value:a.rgbToHexNumber(e.particleRed2,e.particleGreen2,e.particleBlue2).toString(16),time:1}],isStepped:!1},acceleration:{x:e.particleGravityX,y:e.particleGravityY},lifetime:{min:e.particleLifeTimeMin,max:e.particleLifeTimeMax},frequency:e.flow<0?1e-4:1/e.flow,spawnChance:1,particlesPerWave:e.flow<0?e.maxParticleNb:1,maxParticles:e.maxParticleNb,emitterLifetime:e.tank<0?-1:e.flow<0?.001:e.tank/e.flow,pos:{x:0,y:0},addAtBack:!1,spawnType:"circle",spawnCircle:{x:0,y:0,r:e.zoneRadius}};if(s.speed={list:[{time:0,value:e.emitterForceMax}],minimumSpeedMultiplier:e.emitterForceMax!==0?e.emitterForceMin/e.emitterForceMax:1,isStepped:!1},e.alphaParam==="Mutable"?s.alpha={list:[{time:0,value:e.particleAlpha1/255},{time:1,value:e.particleAlpha2/255}],isStepped:!1}:s.alpha={list:[{time:0,value:e.particleAlpha1/255}],isStepped:!1},e.sizeParam==="Mutable"){let n=e.particleSize1/100,m=e.particleSize2/100;const d=e.particleSizeRandomness1/100,u=e.particleSizeRandomness2/100,P=u!==0?(1+d)/(1+u):1;s.scale={list:[{time:0,value:n*(1+d)},{time:1,value:m*(1+u)}],minimumScaleMultiplier:P,isStepped:!1}}else{let n=e.particleSize1/100,m=e.particleSize2/100,d=m!==0?(1+n)/(1+m):1;m===0&&n>m&&(d=(1+m)/(1+n),m=n),s.scale={list:[{time:0,value:m}],minimumScaleMultiplier:d,isStepped:!1}}e.emissionEditionSimpleMode?s.startRotation={min:-e.emitterAngleB/2,max:e.emitterAngleB/2}:s.startRotation={min:e.emitterAngleA,max:e.emitterAngleB};const h=(e.particleLifeTimeMin+e.particleLifeTimeMax)/2;s.rotationSpeed={min:e.particleAngle1/h,max:e.particleAngle2/h},s.blendMode=e.additive?"ADD":"NORMAL",this.renderer=new p.Container,this.emitter=new p.particles.Emitter(this.renderer,l,s),this.emitter.emit=!0;const o=i.getLayer(t.getLayer());o&&o.getRenderer().addRendererObject(this.renderer,t.getZOrder())}getRendererObject(){return this.renderer}update(i){this.emitter.update(i),!this.started&&this.getParticleCount()>0&&(this.started=!0)}setPosition(i,t){this.emitter.spawnPos.x=i,this.emitter.spawnPos.y=t}setAngle(i,t){this.emitter.minStartRotation=i,this.emitter.maxStartRotation=t}setForce(i,t){this.emitter.startSpeed.value=t,this.emitter.minimumSpeedMultiplier=t!==0?i/t:1}setZoneRadius(i){this.emitter.spawnCircle.radius=i}setLifeTime(i,t){this.emitter.minLifetime=i,this.emitter.maxLifetime=t}setGravity(i,t){this.emitter.acceleration.x=i,this.emitter.acceleration.y=t}setColor(i,t,e,l,r,g){this.emitter.startColor.value.r=i,this.emitter.startColor.value.g=t,this.emitter.startColor.value.b=e,this.emitter.startColor.next=this.emitter.startColor.next||{time:1,value:{}},this.emitter.startColor.next.value.r=l,this.emitter.startColor.next.value.g=r,this.emitter.startColor.next.value.b=g}setSize(i,t){this.emitter.startScale.value=i/100,this.emitter.startScale.next&&(this.emitter.startScale.next.value=t/100)}setAlpha(i,t){this.emitter.startAlpha.value=i/255,this.emitter.startAlpha.next&&(this.emitter.startAlpha.next.value=t/255)}setFlow(i,t){this.emitter.frequency=i<0?1e-4:1/i,this.emitterLifetime=t<0?-1:i<0?.001:(t-this.emitter.totalParticleCount)/i}isTextureNameValid(i,t){const e=t.getGame().getImageManager().getInvalidPIXITexture(),l=t.getGame().getImageManager().getPIXITexture(i);return l.valid&&l!==e}setTextureName(i,t){const e=t.getGame().getImageManager().getInvalidPIXITexture(),l=t.getGame().getImageManager().getPIXITexture(i);l.valid&&l!==e&&(this.emitter.particleImages[0]=l)}getTotalParticleCount(){return this.emitter.totalParticleCount}getParticleCount(){return this.emitter.particleCount}stop(){this.emitter.emit=!1}recreate(){this.emitter.cleanup()}destroy(){this.emitter.destroy()}hasStarted(){return this.started}}a.ParticleEmitterObjectPixiRenderer=x,a.ParticleEmitterObjectRenderer=x})(gdjs||(gdjs={}));
//# sourceMappingURL=particleemitterobject-pixi-renderer.js.map
